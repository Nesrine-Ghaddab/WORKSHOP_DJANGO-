# Generated by Django 5.2.6 on 2025-10-09 20:19

import UserApp.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ConferenceApp', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='This field should contain only alphabetic characters.', regex='^[a-zA-Z]+$')])),
                ('last_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='This field should contain only alphabetic characters.', regex='^[a-zA-Z]+$')])),
                ('email', models.EmailField(max_length=254, unique=True, validators=[UserApp.models.verify_email])),
                ('affiliation', models.CharField(max_length=255)),
                ('nationality', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('participant', 'Participant'), ('organisateur', 'membre commite organisateur')], default='participant', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='organizing_comitee',
            fields=[
                ('comitee_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_in_comitee', models.CharField(choices=[('chair', 'Chair'), ('co-chair', 'Co-Chair'), ('member', 'Member')], max_length=255)),
                ('date_join', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conference_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committees', to='ConferenceApp.conference')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committees', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
